sudo: required
cache:
  directories:
  # We cache the SDK so we don't have to download it again on subsequent builds.
  - $HOME/google-cloud-sdk
services:
  - docker
global:
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1 

before_install:
  - echo "======== before install ========"
  # download and install google cloud sdk
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  # This line is critical. We setup the SDK to take precedence in our
  # environment over the old SDK that is already on the machine.
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  # tell sdk who we are and give it access to our account
  - gcloud auth activate-service-account --key-file service-account.json
  - gcloud config set project django-k8s-356722
  - gcloud config set compute/zone us-central1-c
  - gcloud container clusters get-credentials django-k8s

install:
  - pip install -r myproject/requirements.txt

script:
  - python myproject/manage.py test myapp

after_success:
  - python myproject/manage.py collecstatic
  - docker build -t novskytech/djangoproject ./myproject --no-cache
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  - docker push novskytech/djangoproject:k8s

deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    brach: master

after_deploy:
  - echo "======== done deploying !!!! ========"
